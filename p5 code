var serial;       
var portName = 'COM3'; 
var dataX;
var dataY;
var dataZ;
var dataP;
var dataFSR;

var fourNoise = [];

var noise1;

var shapeState = 0;

var nCount = 0;

var bMin = 20000; //breath incorporates only Z axis data now - mess with numbers to change, obvs.

var bMax = 0;

var bAct = 0;


 
function setup() {
 createCanvas(640, 480);          // make canvas
 smooth();                        // antialias drawing lines
 serial = new p5.SerialPort();    // make a new instance of the serialport library
 serial.on('list', printList);    // set a callback function for the serialport list event
 serial.on('connected', serverConnected); // callback for connecting to the server
 serial.on('open', portOpen);     // callback for the port opening
 serial.on('data', serialEvent);  // callback for when new data arrives
 serial.on('error', serialError); // callback for errors
 serial.on('close', portClose);   // callback for the port closing
 
 serial.list();                   // list the serial ports
 serial.open(portName);           // open a serial port
}
function draw() {
  drawOneShape(width/2, height/2);
}

function runShapes() {
  var noise2 = map(dataP, 0, 50, 0, 15);
  
  if (nCount > 7) {nCount = 0;}
  nCount++;
  
  if (nCount % 2 === 0){
  fourNoise.splice((nCount/2), 1, noise2);
  }
  
  if (shapeState == 1) {
    
    noise1 = map(dataP, 0, 50, 125, 225);
    
    fill(255, 255, 255, noise1);
    noStroke;
    
  
  }
  
}

function drawOneShape(x1x, y1y) {
  var br = map(bAct, bMin, bMax, 50, 150);
  
  push();
  translate(x1x, y1y);
  rotate(r1);
  
  quad()
  
}

function newBreath() {
 

}


function breathWork() {
  
  var breathCheck = [];
  
  if (breathCheck.length >= 100){
    breathCheck.splice(0, 1);
  }

breathCheck.push(dataZ);

for (var i = 0; i < breathCheck.length; i++) {
  if (breathCheck[i] < bMin) {bMin = breathCheck[i];}
  if (breathCheck[i] > bMax) {bMax = breathCheck[i];}
}
  
  bAct = dataZ;
  
}

function breathType(init, peak, time){
  this.init = init;
  this.peak = peak;
  this.time = time;
}

function printList(portList) {
 // portList is an array of serial port names
 for (var i = 0; i < portList.length; i++) {
 // Display the list the console:
 println(i + " " + portList[i]);
 }
}
 
function serverConnected() {
 println('connected to server.');
}
 
function portOpen() {
 println('the serial port opened.')
}
 
function serialError(err) {
 println('Something went wrong with the serial port. ' + err);
}
 
function portClose() {
 println('The serial port closed.');
}

function serialEvent() {
  // read a string from the serial port
  // until you get carriage return and newline:
  var inString = serial.readStringUntil('\r\n');
  //check to see that there's actually a string there:
  if (inString.length > 0) {
    if (inString !== 'hello') {           // if you get hello, ignore it
      var sensors = split(inString, ','); // split the string on the commas
      dataX = abs(sensors[0]);
      dataY = abs(sensors[1]);
      dataZ = abs(sensors[2]);
      dataP = abs(sensors[3]);
      dataFSR = sensors[4];
      
      console.log(dataX + ", " + dataY + ", " + dataZ + ", " + dataP + ", " + dataFSR + ", " + millis() + ", " + frameCount);
    }
    serial.write('x'); // send a byte requesting more serial data 
  }
}
